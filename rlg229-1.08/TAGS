
character.c,148
char *print_character(print_character9,117
void character_delete(20,300
int32_t compare_characters_by_next_turn(35,525
uint32_t can_see(46,923

character.h,594
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;11,149
typedef struct npc npc_t;12,183
typedef struct pc pc_t;13,209
typedef struct character 15,234
  pair_t position;17,264
  uint32_t speed;18,283
  uint32_t next_turn;19,301
  uint32_t alive;20,323
  uint32_t sequence_number;28,846
  npc_t *npc;npc29,874
  pc_t *pc;pc30,888
  int32_t color;31,900
  int32_t hit;32,917
  const char* name;33,934
  const char* description;34,954
  char symbol;35,981
  uint32_t abilities;36,998
  uint32_t hitpoints;37,1020
  const dice_t* damage;38,1042
} character_t;39,1068

descriptions.h,2875
# define DESCRIPTIONS_H2,23
typedef struct dungeon dungeon_t;6,70
typedef enum object_type 24,451
  objtype_no_type,25,478
  objtype_WEAPON,26,497
  objtype_OFFHAND,27,515
  objtype_RANGED,28,534
  objtype_ARMOR,29,552
  objtype_HELMET,30,569
  objtype_CLOAK,31,587
  objtype_GLOVES,32,604
  objtype_BOOTS,33,622
  objtype_RING,34,639
  objtype_AMULET,35,655
  objtype_LIGHT,36,673
  objtype_SCROLL,37,690
  objtype_BOOK,38,708
  objtype_FLASK,39,724
  objtype_GOLD,40,741
  objtype_AMMUNITION,41,757
  objtype_FOOD,42,779
  objtype_WAND,43,795
  objtype_CONTAINER,44,811
  objtype_STACK45,833
} object_type_t;46,849
class monster_description 52,947
  std::string name,monster_description::name54,985
  std::string name, description;monster_description::description54,985
  char symbol;monster_description::symbol55,1018
  uint32_t color,monster_description::color56,1033
  uint32_t color, abilities;monster_description::abilities56,1033
  dice speed,monster_description::speed57,1062
  dice speed, hitpoints,monster_description::hitpoints57,1062
  dice speed, hitpoints, damage;monster_description::damage57,1062
  monster_description(monster_description::monster_description59,1104
class object_description 74,1586
  std::string name,object_description::name76,1622
  std::string name, description;object_description::description76,1622
  object_type_t type;object_description::type77,1655
  uint32_t color;object_description::color78,1677
  dice hit,object_description::hit79,1695
  dice hit, damage,object_description::damage79,1695
  dice hit, damage, dodge,object_description::dodge79,1695
  dice hit, damage, dodge, defence,object_description::defence79,1695
  dice hit, damage, dodge, defence, weight,object_description::weight79,1695
  dice hit, damage, dodge, defence, weight, speed,object_description::speed79,1695
  dice hit, damage, dodge, defence, weight, speed, attrubute,object_description::attrubute79,1695
  dice hit, damage, dodge, defence, weight, speed, attrubute, value;object_description::value79,1695
  object_description(object_description::object_description81,1773
class object{object103,2477
  std::string name,object::name105,2500
  std::string name, description;object::description105,2500
  object_type_t type;object::type106,2533
  uint32_t color;object::color107,2555
  dice damage;object::damage108,2573
  int   hit,object::hit109,2588
  int   hit,dodge,object::dodge109,2588
  int   hit,dodge, defence,object::defence109,2588
  int   hit,dodge, defence, weight,object::weight109,2588
  int   hit,dodge, defence, weight, speed,object::speed109,2588
  int   hit,dodge, defence, weight, speed, attrubute,object::attrubute109,2588
  int   hit,dodge, defence, weight, speed, attrubute, value;object::value109,2588
  object(object::object111,2658

dice.h,426
# define DICE_H2,15
typedef void *dice_t;dice_t13,119
class dice 21,304
  int32_t base;dice::base23,327
  uint32_t number,dice::number24,343
  uint32_t number, sides;dice::sides24,343
  dice(dice::dice26,378
  dice(dice::dice29,426
  inline void set(dice::set33,533
  inline void set_base(dice::set_base39,681
  inline void set_number(dice::set_number43,749
  inline void set_sides(dice::set_sides47,826

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.c,1148
typedef struct corridor_path 35,918
  heap_node_t *hn;hn36,949
  uint8_t pos[pos37,968
  uint8_t from[from38,986
  int32_t cost;41,1134
} corridor_path_t;42,1150
static int32_t corridor_path_cmp(44,1170
static void dijkstra_corridor(50,1433
static int connect_two_points(155,5774
int connect_two_points_recursive(182,6701
static int connect_two_rooms(210,7575
static int connect_rooms(228,8226
int connect_rooms_old(239,8399
static int place_room(300,10474
static int place_rooms(377,12902
static int make_rooms(388,13048
static int empty_dungeon(420,13712
static void place_stairs(440,14144
int gen_dungeon(462,14779
static int write_dungeon_map(488,15151
int write_rooms(522,16238
uint32_t calculate_dungeon_size(537,16600
static int write_monsters(553,17404
static int write_user_block(626,20124
int write_dungeon(631,20192
static int read_dungeon_map(719,22541
static int read_rooms(753,23437
static int read_monsters(767,23750
static int read_user_block(820,25279
void unlink_dungeon(825,25346
int read_dungeon(847,25874
void delete_dungeon(950,28441
void init_dungeon(956,28560
void new_dungeon(963,28738

dungeon.h,2037
# define DUNGEON_H2,18
#define DUNGEON_X 15,185
#define DUNGEON_Y 16,220
#define MIN_ROOMS 17,254
#define MAX_ROOMS 18,288
#define ROOM_MIN_X 19,322
#define ROOM_MIN_Y 20,356
#define ROOM_SEPARATION 21,389
#define MAX_PLACEMENT_ATTEMPTS 22,422
#define SAVE_DIR 23,458
#define DUNGEON_SAVE_FILE 24,499
#define MONSTER_DESC_FILE 25,540
#define OBJECT_DESC_FILE 26,590
#define DUNGEON_SAVE_SEMANTIC 27,638
#define DUNGEON_SAVE_VERSION 28,678
#define VISUAL_RANGE 29,712
#define PC_SPEED 30,746
#define mappair(32,781
#define mapxy(33,838
#define hardnesspair(34,873
#define hardnessxy(35,940
typedef enum __attribute__ ((__packed__)) terrain_type 37,986
  ter_debug,38,1043
  ter_wall,39,1056
  ter_wall_no_room,40,1068
  ter_wall_no_floor,41,1088
  ter_wall_immutable,42,1109
  ter_floor,43,1131
  ter_floor_room,44,1144
  ter_floor_hall,45,1162
  ter_floor_tentative,46,1180
  ter_stairs,47,1203
  ter_stairs_up,48,1217
  ter_stairs_down49,1234
} terrain_type_t;50,1252
typedef struct room 52,1271
  pair_t position;53,1293
  pair_t size;54,1312
  uint32_t connected;55,1327
  uint8_t exists;56,1349
} room_t;57,1367
typedef struct npc npc_t;59,1378
typedef struct pc pc_t;60,1404
typedef struct character character_t;61,1428
typedef void *monster_description_t;monster_description_t62,1466
typedef void *object_description_t;object_description_t63,1503
typedef struct dungeon 65,1540
  uint32_t num_rooms;66,1565
  room_t rooms[rooms67,1587
  terrain_type_t map[map68,1614
  uint8_t hardness[hardness77,2267
  uint16_t num_monsters;78,2309
  uint32_t character_sequence_number;79,2334
  character_t *character[character80,2372
  void* object[object81,2420
  uint8_t pc_distance[pc_distance82,2458
  character_t pc;89,2955
  heap_t next_turn;90,2973
  pair_t io_offset;91,2993
  uint32_t save_and_exit;92,3013
  uint32_t quit_no_save;93,3039
  monster_description_t monster_descriptions;94,3064
  object_description_t object_descriptions;95,3110
} dungeon_t;96,3154

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.c,244
void io_init_terminal(25,1430
void io_reset_terminal(44,1988
void io_calculate_offset(49,2034
void io_update_offset(92,3112
void io_display_huge(113,3599
void io_display(228,6199
void io_look_mode(279,7633
void io_handle_input(370,9132

io.h,19
# define IO_H2,13

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,379
static dungeon_t *dungeon;dungeon19,744
typedef struct path 21,772
  heap_node_t *hn;hn22,794
  uint8_t pos[pos23,813
} path_t;24,831
static int32_t dist_cmp(26,842
void dijkstra(33,1196
void move_character(141,5581
void do_moves(155,6084
void dir_nearest_wall(192,7011
uint32_t in_corner(204,7426
static void new_dungeon_level(222,8054
uint32_t move_pc(237,8345

move.h,104
# define MOVE_H2,15
typedef struct dungeon dungeon_t;8,74
typedef struct character character_t;9,108

npc.c,272
void npc_delete(9,128
void gen_monsters(16,187
void npc_next_pos_rand(58,1460
    uint32_t i;62,1550
    uint8_t a[a63,1566
void npc_next_pos_line_of_sight(90,2025
void npc_next_pos_gradient(113,2713
void npc_next_pos(162,4049
uint32_t dungeon_has_npcs(204,5596

npc.h,1241
# define NPC_H2,14
# define NPC_SMART 12,114
# define NPC_TELEPATH 13,152
# define NPC_TUNNEL 14,190
# define NPC_PASS_WALL 15,228
# define NPC_BIT04 16,266
# define NPC_BIT05 17,304
# define NPC_BIT06 18,342
# define NPC_BIT07 19,380
# define NPC_BIT08 20,418
# define NPC_BIT09 21,456
# define NPC_BIT10 22,494
# define NPC_BIT11 23,532
# define NPC_BIT12 24,570
# define NPC_BIT13 25,608
# define NPC_BIT14 26,646
# define NPC_BIT15 27,684
# define NPC_BIT16 28,722
# define NPC_BIT17 29,760
# define NPC_BIT18 30,798
# define NPC_BIT19 31,836
# define NPC_BIT20 32,874
# define NPC_BIT21 33,912
# define NPC_BIT22 34,950
# define NPC_BIT23 35,988
# define NPC_BIT24 36,1026
# define NPC_BIT25 37,1064
# define NPC_BIT26 38,1102
# define NPC_BIT27 39,1140
# define NPC_BIT28 40,1178
# define NPC_BIT29 41,1216
# define NPC_BIT30 42,1254
# define NPC_BIT31 43,1292
# define has_characteristic(45,1331
typedef struct dungeon dungeon_t;48,1441
typedef struct character character_t;49,1475
typedef uint32_t npc_characteristics_t;50,1513
typedef struct npc 52,1554
  npc_characteristics_t characteristics;53,1575
  uint32_t have_seen_pc;54,1616
  pair_t pc_last_known_position;55,1641
} npc_t;56,1674

pc.c,127
void pc_delete(11,133
uint32_t pc_is_alive(18,193
void place_pc(23,255
void config_pc(33,682
uint32_t pc_next_pos(54,1204

pc.h,165
# define PC_H2,13
typedef struct dungeon dungeon_t;8,70
typedef struct pc 10,105
  char name[name11,125
  char catch_phrase[catch_phrase12,142
} pc_t;13,167

rlg229.c,43
static void usage(16,259
int main(26,467

utils.c,25
int makedirectory(9,124

utils.h,78
# define UTILS_H2,16
# define rand_under(12,127
# define rand_range(14,225
